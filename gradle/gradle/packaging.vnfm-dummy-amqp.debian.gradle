/*
 *
 *  * Copyright (c) 2016 Fraunhofer FOKUS
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the "License");
 *  * you may not use this file except in compliance with the License.
 *  * You may obtain a copy of the License at
 *  *
 *  *     http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software
 *  * distributed under the License is distributed on an "AS IS" BASIS,
 *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  * See the License for the specific language governing permissions and
 *  * limitations under the License.
 *
 *
 */

ext {
    debianApplicationVersionFull = "${applicationVersionFull}".replaceAll("-", ".")

    baseName = 'openbaton'
    componentName = "vnfm-dummy-amqp"
    fullName = "${baseName}-${componentName}"
    versionName = "${version}".replaceAll("-SNAPSHOT", "")
    propertiesDir = '/etc/openbaton'
    baseBinaryDir = '/usr/lib/openbaton'
    jarSubpathName = "${componentName}".replaceAll("-", "/")
}

task logDebianPackageJavaDependency() {
    // print the logs about the correct java dependency
    doLast() {
        if (project.hasProperty('javaVersion') && (javaVersion == "7")) {
            println " * Adding debian package dependency to Java 7"
        }
        else {
            println " * Adding debian package dependency to Java 8"
        }
    }
}

task makeDeb(type: Deb, dependsOn: [jar, buildi, logDebianPackageJavaDependency]) { 
    packageName = (applicationRelease) ? "${fullName}" : "${fullName}-nightly" 
    version = debianApplicationVersionFull
    //release = 1 
    priority = 'optional'
    arch = 'all'
    maintainer = 'Open Baton Team'
    vendor = 'Open Source (Implemented by Fraunhofer FOKUS and TUB)'
    license = 'Apache 2.0 License'
    url = 'https://github.com/openbaton'
    summary = 'Open Baton Dummy VNFM AMQP'
    packageDescription = 'The Dummy Virtual Network Function Manager AMQP (Dummy VNFM AMQP) is a component of the Open Baton project which is an ETSI compliant implementation of a NFV Management and Orchestration (MANO) System'

    postInstall file('gradle/gradle/scripts/debian/postinst')
    preUninstall file('gradle/gradle/scripts/debian/prerm')
    postUninstall file('gradle/gradle/scripts/debian/postrm')

    // set the correct java dependency
    if (project.hasProperty('javaVersion') && (javaVersion == "7")) {
        requires('openjdk-7-jre')
    }
    else {
        requires('openjdk-8-jre')
    }

    requires('rabbitmq-server')

    // Copy files from "from path" to "into path"
    from('src/main/resources/application.properties')   {                                                                                      // properties file
        into "${propertiesDir}"
        rename("application.properties", "${fullName}.properties")
    }
    from(jar.outputs.files) {                                                                                                                  // jar file
        into "${baseBinaryDir}/vnfm/dummy-amqp"
        rename("(.*)", "${fullName}-${version}.jar")
    }
    from('gradle/gradle/scripts/openbaton-vnfm-dummy-amqp')                     { into '/usr/bin/'}                                            // executable to run the Dummy VNFM AMQP
    from('gradle/gradle/scripts/openbaton-vnfm-dummy-amqp')                     { into '/etc/init.d/'}                                         // executable to run the Dummy VNFM AMQP as a service (SysV)
    from('gradle/gradle/scripts/openbaton-vnfm-dummy-amqp.conf')                { into '/etc/init/'}                                           // conf file to run the Dummy VNFM AMQP as a service (Upstart)
    from('gradle/gradle/scripts/systemd/openbaton-vnfm-dummy-amqp.service')     { into '/usr/lib/systemd/system/'}                             // executable to run the Dummy VNFM AMQP as a service (Systemd)
    from('gradle/gradle/scripts/systemd/vnfm-dummy-amqp.env')                   { into '/usr/lib/openbaton/systemd/vnfm/dummy-amqp'}           // environment file to run the Dummy VNFM AMQP as a service (Systemd)
    from('gradle/gradle/scripts/systemd/vnfm-dummy-amqp.preexecstart')          { into '/usr/lib/openbaton/systemd/vnfm/dummy-amqp'}           // preexecstart file to run the Dummy VNFM AMQP as a service (Systemd)
}
