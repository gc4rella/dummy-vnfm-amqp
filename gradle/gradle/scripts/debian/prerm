#!/bin/sh

##########################
#### General Settings ####
##########################

set -e
set -u
#set -x # only for DEBUG

# Make available the functions defined in /lib/lsb/init-functions
. /lib/lsb/init-functions


##########################
#### Global Variables ####
##########################

OPENBATON_USER="$(id -un 2>/dev/null || true)"

OPENBATON_FANCY_PROJECT_NAME="Open Baton Dummy VNFM AMQP"         # Used for logging and other printings
OPENBATON_PROJECT_NAME="openbaton-vnfm-dummy-amqp"                # Used for process checkings (it should be equal to the debian package's name)
OPENBATON_BASE_DIR=/usr
OPENBATON_EXE_FOLDER=$OPENBATON_BASE_DIR/bin


##############################
#### Execution privileges ####
##############################

checkBinary () {
    if command -v $1 >/dev/null 2>&1 ; then
        log_success_msg "Checking for '$1'" 
        return 0
    else
        log_failure_msg "Checking for '$1'"
        return 1
    fi
}

_ex='sh -c'
if [ "${OPENBATON_USER}" != 'root' ]; then
    if checkBinary sudo; then
        _ex='sudo -E sh -c'
    elif checkBinary su; then
        _ex='su -c'
    fi
fi


####################
#### Open Baton ####
####################

stopVNFMDummyAMQP () {
    instance=$(ps aux | grep -v grep | grep "${OPENBATON_PROJECT_NAME}-*jar" | wc -l)
    if [ ${instance} -ne 0 ]; then
        if $_ex 'systemctl stop '"${OPENBATON_PROJECT_NAME}"'.service' >/dev/null ; then
    	    log_success_msg "Stopping the ${OPENBATON_FANCY_PROJECT_NAME} .."
        elif $_ex 'stop '"${OPENBATON_PROJECT_NAME}" >/dev/null ; then
    	    log_success_msg "Stopping the ${OPENBATON_FANCY_PROJECT_NAME} .."
        else
            log_failure_msg "Stopping the ${OPENBATON_FANCY_PROJECT_NAME}"
        fi
    fi
}

stopVNFMDummyAMQP

